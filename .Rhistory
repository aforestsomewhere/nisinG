#TEST
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
group_by(timepoint) %>%
summarise(p_value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = sig_code=sigcode(p.value),
group = "dominant_species")
results_collapsed <- bind_rows(results_collapsed, result)
}
#TEST
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
group_by(timepoint) %>%
summarise(p_value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = sigcode(p.value),
group = "dominant_species")
results_collapsed <- bind_rows(results_collapsed, result)
}
##########################
# Final test - collapsed to exposure, but grouped within timepoints
#grouping_var <- c("strep_exposure", "dominant_species")
results_collapsed <- data.frame()
#TEST
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
group_by(timepoint) %>%
summarise(p_value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = sigcode(p_value),
group = "dominant_species")
results_collapsed <- bind_rows(results_collapsed, result)
}
##########################
# Final test - collapsed to exposure, but grouped within timepoints
#grouping_var <- c("strep_exposure", "dominant_species")
results_collapsed <- data.frame()
#TEST
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
group_by(timepoint) %>%
summarise(p_value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = case_when(!is.na(p_value) & p_value < 0.05 ~ "*",
!is.na(p_value) & p_value >= 0.05 ~ "",
TRUE ~ NA_character_),
group = "dominant_species")
results_collapsed <- bind_rows(results_collapsed, result)
}
View(results_collapsed)
results_collapsed <- data.frame()
#testing for differences between strep_exposure Y/N
for (i in (1:length(metric_list))){
result <- dom_big %>%
group_by(timepoint) %>%
do(tidy(kruskal.test(x = .[[metric_list[i]]], g = .$strep_exposure)))
result <- result %>%
mutate(metric=metric_list[i]) %>%
mutate(sig_code=sigcode(p.value)) %>%
mutate(group = "strep_exposure")
results_collapsed <- bind_rows(results_collapsed, result)
}
# Final test - collapsed to dominant species, where more than 2 available, but grouped within timepoints
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
group_by(timepoint) %>%
summarise(p_value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = case_when(!is.na(p_value) & p_value < 0.05 ~ "*",
!is.na(p_value) & p_value >= 0.05 ~ "",
TRUE ~ NA_character_),
group = "dominant_species")
results_collapsed <- bind_rows(results_collapsed, result)
}
##########################
# Final test - collapsed to exposure, but grouped within timepoints
#grouping_var <- c("strep_exposure", "dominant_species")
results_collapsed <- data.frame()
#testing for differences between strep_exposure Y/N
for (i in (1:length(metric_list))){
result <- dom_big %>%
group_by(timepoint) %>%
do(tidy(kruskal.test(x = .[[metric_list[i]]], g = .$strep_exposure)))
result <- result %>%
mutate(metric=metric_list[i]) %>%
mutate(sig_code=sigcode(p.value)) %>%
mutate(group = "strep_exposure")
results_collapsed <- bind_rows(results_collapsed, result)
}
# Final test - collapsed to dominant species, where more than 2 available, but grouped within timepoints
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
group_by(timepoint) %>%
summarise(p.value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = case_when(!is.na(p_value) & p_value < 0.05 ~ "*",
!is.na(p_value) & p_value >= 0.05 ~ "",
TRUE ~ NA_character_),
group = "dominant_species",
method = "Kruskal-Wallis rank sum test")
results_collapsed <- bind_rows(results_collapsed, result)
}
results_collapsed <- data.frame()
#testing for differences between strep_exposure Y/N
for (i in (1:length(metric_list))){
result <- dom_big %>%
group_by(timepoint) %>%
do(tidy(kruskal.test(x = .[[metric_list[i]]], g = .$strep_exposure)))
result <- result %>%
mutate(metric=metric_list[i]) %>%
mutate(sig_code=sigcode(p.value)) %>%
mutate(group = "strep_exposure")
results_collapsed <- bind_rows(results_collapsed, result)
}
# Final test - collapsed to dominant species, where more than 2 available, but grouped within timepoints
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
group_by(timepoint) %>%
summarise(p.value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = case_when(!is.na(p.value) & p.value < 0.05 ~ "*",
!is.na(p.value) & p.value >= 0.05 ~ "",
TRUE ~ NA_character_),
group = "dominant_species",
method = "Kruskal-Wallis rank sum test")
results_collapsed <- bind_rows(results_collapsed, result)
}
#Follow up testing: only T24, only DBP, absolute, relative, both strep_exposure and dominant species
indices <- c("dbp", "absolute", "relative")
groups <- c("strep_exposure", "dominant_species")
#Follow up testing: only T24, only DBP, absolute, relative, both strep_exposure and dominant species
indices <- c("dbp", "absolute", "relative")
groups <- c("strep_exposure", "dominant_species")
#dominant species approaches significance level - follow up
for (i in (1:length(indices))){
c2 <- dunnTest(indices[i] ~ strep_exposure, data = dom_big, method="bh")
dunn_result2 <- c2$res %>%
mutate(method="Dunn's Test") %>%
mutate(correction="BH") %>%
rowwise() %>%
mutate(sig_code=sigcode(as.numeric(P.adj)))
}
#dominant species approaches significance level - follow up
for (i in (1:length(indices))){
c2 <- dunnTest(indices[i] ~ strep_exposure, data = dom_big, method="bh")
dunn_result2 <- c2$res %>%
mutate(method="Dunn's Test") %>%
mutate(correction="BH") %>%
rowwise() %>%
mutate(sig_code=sigcode(as.numeric(P.adj)))
results_dunn <- bind_rows(results_dunn, dunn_result2)
}
dunnTest(data=dom_big, dbp ~ strep_exposure, method="bh")
View(dom_big)
#wilcoxon?
#function to perform wilcox test
calc_wilcox <- function(dom, metric, group){
res.stat <- dom %>%
rstatix::wilcox_test(as.formula(paste(metric, group, sep = "~"))) %>%
rstatix::adjust_pvalue(method = "BH") %>%
rstatix::add_significance("p.adj") %>%
rstatix::add_xy_position(x=group, fun="max")
return(res.stat)
}
calc_wilcox(dom = dom_big, metric = "dbp", group="strep_exposure")
#wilcoxon?
#function to perform wilcox test
calc_wilcox <- function(dom, metric, group, facet){
res.stat <- dom %>%
group_by(facet) %>%
rstatix::wilcox_test(as.formula(paste(metric, group, sep = "~"))) %>%
rstatix::adjust_pvalue(method = "BH") %>%
rstatix::add_significance("p.adj") %>%
rstatix::add_xy_position(x=group, fun="max")
return(res.stat)
}
calc_wilcox(dom = dom_big, metric = "dbp", group="strep_exposure", facet="timepoint")
#wilcoxon?
#function to perform wilcox test
calc_wilcox <- function(dom, metric, group, facet){
res.stat <- dom %>%
group_by(paste(facet)) %>%
rstatix::wilcox_test(as.formula(paste(metric, group, sep = "~"))) %>%
rstatix::adjust_pvalue(method = "BH") %>%
rstatix::add_significance("p.adj") %>%
rstatix::add_xy_position(x=group, fun="max")
return(res.stat)
}
calc_wilcox(dom = dom_big, metric = "dbp", group="strep_exposure", facet="timepoint")
# Final test - collapsed to dominant species, where more than 2 available, but only T_24
dom_24 <- dom_big %>% filter(timepoint=="T_24")
View(dom_24)
#wilcoxon?
#function to perform wilcox test
calc_wilcox <- function(dom, metric, group){
res.stat <- dom %>%
group_by(facet) %>%
rstatix::wilcox_test(as.formula(paste(metric, group, sep = "~"))) %>%
rstatix::adjust_pvalue(method = "BH") %>%
rstatix::add_significance("p.adj") %>%
rstatix::add_xy_position(x=group, fun="max")
return(res.stat)
}
return(res.stat)
#wilcoxon?
#function to perform wilcox test
calc_wilcox <- function(dom, metric, group){
res.stat <- dom %>%
rstatix::wilcox_test(as.formula(paste(metric, group, sep = "~"))) %>%
rstatix::adjust_pvalue(method = "BH") %>%
rstatix::add_significance("p.adj") %>%
rstatix::add_xy_position(x=group, fun="max")
return(res.stat)
}
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure")
results_collapsed <- data.frame()
#testing for differences between strep_exposure Y/N
for (i in (1:length(metric_list))){
result <- dom_big %>%
group_by(timepoint) %>%
do(tidy(kruskal.test(x = .[[metric_list[i]]], g = .$strep_exposure)))
result <- result %>%
mutate(metric=metric_list[i]) %>%
mutate(sig_code=sigcode(p.value)) %>%
mutate(group = "strep_exposure")
results_collapsed <- bind_rows(results_collapsed, result)
}
# Final test - collapsed to dominant species, where more than 2 available, but only T_24
for (i in 1:length(metric_list)) {
result <- dom_big %>%
#filter(dominant_species != "Bifidobacterium_bifidum") %>%
#group_by(timepoint) %>%
summarise(p.value = ifelse(n_distinct(dominant_species) >= 2,
kruskal.test(get(metric_list[i]), dominant_species)$p.value,
NA)) %>%
mutate(metric = metric_list[i],
sig_code = case_when(!is.na(p.value) & p.value < 0.05 ~ "*",
!is.na(p.value) & p.value >= 0.05 ~ "",
TRUE ~ NA_character_),
group = "dominant_species",
method = "Kruskal-Wallis rank sum test")
results_collapsed <- bind_rows(results_collapsed, result)
}
#Follow up testing: only T24, only DBP, absolute, relative, both strep_exposure and dominant species
# Final test - collapsed to dominant species, where more than 2 available, but only T_24
dom_24 <- dom_big %>% filter(timepoint=="T_24")
indices <- c("dbp", "absolute", "relative")
groups <- c("strep_exposure", "dominant_species")
#wilcoxon?
#function to perform wilcox test
calc_wilcox <- function(dom, metric, group){
res.stat <- dom %>%
rstatix::wilcox_test(as.formula(paste(metric, group, sep = "~"))) %>%
rstatix::adjust_pvalue(method = "BH") %>%
rstatix::add_significance("p.adj") %>%
rstatix::add_xy_position(x=group, fun="max")
return(res.stat)
}
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure")
#####################
# Plots for KW/Dunn #
#####################
#timepoint sig - follow up
#function to perform wilcox test
calc_wilcox <- function(dom, metric, group){
res.stat <- dom %>%
rstatix::wilcox_test(as.formula(paste(metric, group, sep = "~"))) %>%
rstatix::adjust_pvalue(method = "BH") %>%
rstatix::add_significance("p.adj") %>%
rstatix::add_xy_position(x=group, fun="max")
stdevvar <- sd(dom[,as.character(metric)])
res.stat <- res.stat %>%
mutate(y.position = y.position + (2*stdevvar)) #very manual hack to move p values up
return(res.stat)
}
#wilcoxon?
#function to perform wilcox test
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure")
dbp_strep <- plot_layer(plot_base(dom_24, metric="dbp", group = "strep_exposure"),
calc_wilcox(alphas = dom_24, metric = "dbp", group="strep_exposure"))
dbp_strep <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "strep_exposure"),
calc_wilcox(alphas = dom_24, metric = "dbp", group="strep_exposure"))
#calc_wilcox(dom = dom_big, metric = "dbp", group="timepoint")
#function to generate base violin plot
plot_base <- function(df, metric, group){
p <- ggviolin(df, x=group, y=metric,
fill=group, xlab="", ylab=metric, alpha=0.6)
return(p)
}
#function to generate plot to extract the legend
plot_leg <- function(base_plot,legendtitle, pal){
p1 <- base_plot +
scale_fill_manual(name=legendtitle,
#labels=c(expression(paste("No ", italic("S. salivarius"))),expression(paste("Any ", italic("S. salivarius")))),
values = pal)+
geom_point() +
theme(legend.box = "vertical",
legend.position = "bottom",
legend.title = element_text(face="bold"),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())
return(p1)
}
#function to combine the base plot with the significance testing
plot_layer <- function(base_plot, stats, legendtitle, pal){
p1 <- base_plot +
stat_pvalue_manual(stats, label = "p.adj = {p.adj}", tip.length = 0.01)+
scale_fill_manual(name=legendtitle,
#labels=c(expression(paste("No ", italic("S. salivarius"))),expression(italic("S. salivarius"))),
values = pal)+
geom_point() +
theme(legend.position='none',
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
axis.title.y = element_text(size=12, face="bold", colour = "black"))
}
dbp_strep <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure"))
dbp_strep <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
dbp_strep
absolute_strep <- plot_layer(plot_base(df=dom_24, metric="absolute", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "absolute", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
absolute_strep
rel_strep <- plot_layer(plot_base(df=dom_24, metric="relative", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "relative", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
rel_strep
dbp_spec <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = palette_collapsed)
absolute_spec <- plot_layer(plot_base(df=dom_24, metric="absolute", group = "dominant_species"),
calc_wilcox(dom = dom_24, metric = "absolute", group="dominant_species"),
legendtitle = "Any exposure", pal = palette_collapsed)
rel_spec <- plot_layer(plot_base(df=dom_24, metric="relative", group = "dominant_species"),
calc_wilcox(dom = dom_24, metric = "relative", group="dominant_species"),
legendtitle = "Any exposure", pal = palette_collapsed)
rel_spec
#dominant species
dbp_spec <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("Rushmore", 3))
dp_spec
dbp_spec
#dominant species
#drop the sample where B bifidum is dominant
dom_24_spec <- dom_24 %>% filter(dominant_species!="Bifidobacterium_bifidum")
dbp_spec <- plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("Moonrise1", 3))
dbp_spec
dbp_spec <- plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket1", 3))
dbp_spec
dbp_spec <- plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
dbp_spec
dom_24_spec <- dom_24 %>% filter(dominant_species!="Bifidobacterium_bifidum")
dbp_spec <- plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
absolute_spec <- plot_layer(plot_base(df=dom_24_spec, metric="absolute", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "absolute", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
rel_spec <- plot_layer(plot_base(df=dom_24_spec, metric="relative", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "relative", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
leg_spec <- plot_leg(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
leg_spec <- plot_leg(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
leg_strep <- plot_leg(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
legendtitle = "Any exposure", pal =palette_collapsed)
final_plot <- plot_grid(ncol=3,
plotlist = leg_strep, dbp_strep, absolute_strep, rel_strep,
leg_spec, dbp_spec, absolute_spec, rel_spec,
labels = "AUTO")
final_plot
final_plot <- plot_grid(ncol=3,
plotlist = dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec,
labels = "AUTO")
final_plot
rel_strep <- plot_layer(plot_base(df=dom_24, metric="relative", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "relative", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
final_plot <- plot_grid(ncol=2,
plotlist = dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec,
labels = "AUTO")
final_plot
dbp_strep <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
final_plot <- plot_grid(ncol=2,
plotlist = dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec,
labels = "AUTO")
final_plot
final_plot <- plot_grid(ncol=2, plotlist = dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec)
final_plot
dom_24 <- dom_big %>% filter(timepoint=="T_24")
indices <- c("dbp", "absolute", "relative")
groups <- c("strep_exposure", "dominant_species")
#wilcoxon?
#function to perform wilcox test
#calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure")
leg_strep <- plot_leg(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
legendtitle = "Any exposure", pal =palette_collapsed)
dbp_strep <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
absolute_strep <- plot_layer(plot_base(df=dom_24, metric="absolute", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "absolute", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
rel_strep <- plot_layer(plot_base(df=dom_24, metric="relative", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "relative", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
#dominant species
#drop the sample where B bifidum is dominant
dom_24_spec <- dom_24 %>% filter(dominant_species!="Bifidobacterium_bifidum")
leg_spec <- plot_leg(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
dbp_spec <- plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
absolute_spec <- plot_layer(plot_base(df=dom_24_spec, metric="absolute", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "absolute", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
rel_spec <- plot_layer(plot_base(df=dom_24_spec, metric="relative", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "relative", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
final_plot <- plot_grid(ncol=2, plotlist = dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec)
final_plot
#wilcoxon?
#function to perform wilcox test
#calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure")
leg_strep <- plot_leg(plot_base(df=dom_24_spec, metric="dbp", group = "strep_exposure"),
legendtitle = "Any exposure", pal =palette_collapsed)
dbp_strep <- plot_layer(plot_base(df=dom_24, metric="dbp", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "dbp", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
absolute_strep <- plot_layer(plot_base(df=dom_24, metric="absolute", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "absolute", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
rel_strep <- plot_layer(plot_base(df=dom_24, metric="relative", group = "strep_exposure"),
calc_wilcox(dom = dom_24, metric = "relative", group="strep_exposure"),
legendtitle = "Any exposure", pal = palette_collapsed)
#dominant species
#drop the sample where B bifidum is dominant
dom_24_spec <- dom_24 %>% filter(dominant_species!="Bifidobacterium_bifidum")
leg_spec <- plot_leg(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
dbp_spec <- plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
absolute_spec <- plot_layer(plot_base(df=dom_24_spec, metric="absolute", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "absolute", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
rel_spec <- plot_layer(plot_base(df=dom_24_spec, metric="relative", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "relative", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2))
final_plot <- plot_grid(ncol=2, plotlist = dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec)
final_plot
View(dbp_strep)
dbp_spec <- print(plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2)))
dbp_spec <- print(plot_layer(plot_base(df=dom_24_spec, metric="dbp", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "dbp", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2)))
absolute_spec <- print(plot_layer(plot_base(df=dom_24_spec, metric="absolute", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "absolute", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2)))
rel_spec <- print(plot_layer(plot_base(df=dom_24_spec, metric="relative", group = "dominant_species"),
calc_wilcox(dom = dom_24_spec, metric = "relative", group="dominant_species"),
legendtitle = "Any exposure", pal = wes_palette("BottleRocket2", 2)))
final_plot <- plot_grid(plotlist = dbp_spec, absolute_spec, rel_spec)
final_plot
plotlist <- c(dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec)
final_plot <- plot_grid(plotlist = plotlist)
final_plot
plotlistw <- c(dbp_strep, absolute_strep, rel_strep,dbp_spec, absolute_spec, rel_spec)
final_plot <- plot_grid(plotlist = plotlistw)
final_plot
plotlistw <- c("dbp_strep", "absolute_strep", "rel_strep","dbp_spec", "absolute_spec", "rel_spec")
final_plot <- plot_grid(plotlist = plotlistw)
final_plot
